#
# by John Lampe
#

PASL_VERSION = "1.0";

# When a log() entry is made, the vulnerability will have this plugin ID.

SDP_client = 7906;

# prm to subscribe to
SDP_1 = 719981;	#client
SDP_2 = 719981;	#server

obj = object();
obj.callback.add("SDP");
obj.filter.event.id.add(SDP_1);
obj.filter.event.id.add(SDP_2);



function SDP(obj)
{
    local_var packet_data, data_sz, is_sdp;

    packet_data = obj.packet.data();
    data_sz = strlen(packet_data);

    if (data_sz > 4)
    {
        is_sdp = parse_sdp(pkt:packet_data);
        if (!isnull(is_sdp))
            sdp_report(pkt:is_sdp);
    }
}


function parse_sdp(pkt)
{
    local_var ret = NULL;
    local_var line;
    local_var data_sz = strlen(pkt);
    local_var sdp_regex = "^(v|o|s|i|u|e|p|c|b|t|r|z|k|a|m)=.*";
    local_var timestamp_regex = "^t=[0-9]+ [0-9]+$";
    timer_set = 0;

    foreach line ( split(pkt, sep:string("\n"), keep:FALSE) )
    {
        if (eregmatch(pattern:sdp_regex, string:line))
            ret = string(ret, line, "\n");
        if (eregmatch(pattern:timestamp_regex, string:line))
            timer_set += 1;
    }
    if (timer_set > 0)
        return ret;
    else
        return NULL;
}



function sdp_report(pkt) 
{
    local_var id , name, synopsis, description, plugin_output, realtime, src_port, solution, seealso;
    local_var src_ip, bid, protocol, risk, cpe, family, cve, dst_ip, risk_tmp;

    src_ip = obj.event.src();
    dst_ip = obj.event.dst();

    src_port = 0;
    id = SDP_client;
    protocol = obj.packet.ip.protocol();
    dport = obj.event.dport();
    risk = INFO;

    seealso = "https://tools.ietf.org/html/rfc4566";
    family = "Generic";
    name = "SDP Detection";
    synopsis = string("The remote host is running the SDP protocol.");
    description = string("SDP is a common protocol for setting up multi-media connections. See the session data below");
    plugin_output = pkt;
    realtime = YES;
    bid = "";
    nid = "";
    cpe = "";
    cve = "";
    solution = "N/A";


    obj.log(id:id,
            name:name,
            src_ip:src_ip,
            src_port:src_port,
            dst_ip:dst_ip,
            dst_port:dport,
            protocol:protocol,
            synopsis:synopsis,
            solution:solution,
            seealso:seealso,
            risk:risk,
            cve:cve,
            core:core,
            cpe:cpe,
            bid:bid,
            description:description,
            stripped_description:description,
            plugin_output:plugin_output,
            realtime:realtime,
            family:family,
            nid:nid,
            version:PASL_VERSION);
}


